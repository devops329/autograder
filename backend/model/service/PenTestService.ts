import { DB } from '../dao/mysql/Database';
import { User } from '../domain/User';

export class PenTestService {
  private db: DB;
  constructor(db: DB) {
    this.db = db;
  }

  async getPentestPartner(netId: string) {
    const partnerNetId = await this.db.getCurrentPentestPartner(netId);
    if (!partnerNetId) {
      return await this.getNewPentestPartner(netId);
    }
    return await this.db.getUser(partnerNetId);
  }

  private async getNewPentestPartner(netId: string) {
    let partner: User;
    const eligiblePartners = await this.getEligiblePentestPartners(netId);
    if (eligiblePartners.length === 0) {
      return null;
    }
    const partnerId = eligiblePartners[Math.floor(Math.random() * eligiblePartners.length)].netId;
    partner = (await this.db.getUser(partnerId))!;
    this.updatePentestPartner(netId, partnerId);
    this.updatePentestPartner(partnerId, netId);
    return partner;
  }

  private async getEligiblePentestPartners(netId: string) {
    return await this.db.getEligiblePentestPartners(netId);
  }

  private async updatePentestPartner(netId: string, partnerId: string) {
    return await this.db.updatePentestPartner(netId, partnerId);
  }
}
